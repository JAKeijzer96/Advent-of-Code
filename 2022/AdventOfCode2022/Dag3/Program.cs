/*Dag 3 deel 1*/Console.WriteLine(File.ReadAllLines("../../../input.txt").Select(line => line.Trim().Insert(line.Length / 2, "|").Split("|"))/*Split string in half*/.Select(splitLine => splitLine[0].First(character => splitLine[1].Contains(character))).Select(character => char.IsUpper(character) ? character - 38 : character - 96).Sum());
/*Dag 3 deel 2*/Console.WriteLine(Enumerable.Range(0, File.ReadAllLines("../../../input.txt").Length / 3).Select(n => File.ReadAllLines("../../../input.txt")[3 * n].Intersect(File.ReadAllLines("../../../input.txt")[3 * n + 1]).Intersect(File.ReadAllLines("../../../input.txt")[3 * n + 2]).Single()).Select(c => char.IsUpper(c) ? c - 38 : c - 96).Sum());
/*Dag 3 deel 2 versie 2*///Console.WriteLine((from n in Enumerable.Range(0, File.ReadAllLines("../../../input.txt").Length / 3) let input = File.ReadAllLines("../../../input.txt") let character = input[3 * n].Intersect(input[3 * n + 1]).Intersect(input[3 * n + 2]).Single() select char.IsUpper(character) ? character - 38 : character - 96).Sum());
/*Credits voor Intersect inspiratie: // https://github.com/rversteeg/AdventOfCode2020/blob/main/Y2022/Day03.cs*/